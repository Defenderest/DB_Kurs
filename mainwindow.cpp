#include "mainwindow.h"
#include "./ui_mainwindow.h" // Keep UI include first if it depends on Qt headers
#include "database.h"      // Include DatabaseManager implementation and BookDisplayInfo struct
#include <QStatusBar>      // For showing status messages
#include <QMessageBox>     // For showing error dialogs
#include <QDebug>          // For logging
#include <QLabel>          // –î–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É —Ç–∞ –∑–æ–±—Ä–∞–∂–µ–Ω—å
#include <QVBoxLayout>     // –î–ª—è –∫–æ–º–ø–æ–Ω—É–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –∫–∞—Ä—Ç–∫–∏
#include <QGridLayout>     // –î–ª—è —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è –∫–∞—Ä—Ç–æ–∫ —É —Å—ñ—Ç—Ü—ñ
#include <QPushButton>     // –î–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫" (–ø—Ä–∏–∫–ª–∞–¥)
#include <QPixmap>         // –î–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏
#include <QFrame>          // –î–ª—è —Ä–∞–º–∫–∏ –∫–∞—Ä—Ç–∫–∏
#include <QSizePolicy>     // –î–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ä–æ–∑–º—ñ—Ä—ñ–≤
#include <QScrollArea>     // –©–æ–± –ø–µ—Ä–µ–∫–æ–Ω–∞—Ç–∏—Å—è, —â–æ –≤–º—ñ—Å—Ç –ø—Ä–æ–∫—Ä—É—á—É—î—Ç—å—Å—è

MainWindow::MainWindow(QWidget *parent)
    : QMainWindow(parent)
    , ui(new Ui::MainWindow)
{
    ui->setupUi(this);

    // 1. –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä DatabaseManager
    m_dbManager = new DatabaseManager(this); // 'this' —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–æ–¥–∏—Ç–µ–ª—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–º—è—Ç—å—é

    // 2. –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
    bool connected = m_dbManager->connectToDatabase(
        "127.127.126.49",      // –•–æ—Å—Ç
        5432,             // –ü–æ—Ä—Ç
        "postgres",   // –ò–º—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        "postgres",       // –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        "1234"            // –ü–∞—Ä–æ–ª—å (–í–ù–ò–ú–ê–ù–ò–ï: –ù–µ —Ö—Ä–∞–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª–∏ –≤ –∫–æ–¥–µ –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö!)
    );

    // 3. –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ —Å—Ç—Ä–æ–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if (connected) {
        ui->statusBar->showMessage(tr("–£—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö."), 5000); // –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ 5 —Å–µ–∫—É–Ω–¥
        qInfo() << "Database connection successful.";

        // --- –í–†–ï–ú–ï–ù–ù–û: –°–æ–∑–¥–∞–µ–º —Å—Ö–µ–º—É –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ ---
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ –∫–Ω–æ–ø–∫–µ –∏–ª–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
        if (!m_dbManager->createSchemaTables()) {
             QMessageBox::critical(this, tr("–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ö–µ–º–∏"),
                                  tr("–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—ñ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.\n–î–∏–≤—ñ—Ç—å—Å—è –ª–æ–≥–∏ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π."));
             ui->statusBar->showMessage(tr("–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ö–µ–º–∏ –ë–î!"), 0); // –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        } else {
             ui->statusBar->showMessage(tr("–°—Ö–µ–º–∞ –ë–î —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–∞/–æ–Ω–æ–≤–ª–µ–Ω–∞."), 5000);
             // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 30 –∑–∞–ø–∏—Å–µ–π)
             if (!m_dbManager->populateTestData(30)) {
                 QMessageBox::warning(this, tr("–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö"),
                                      tr("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø–æ–≤–Ω–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—ñ —Ç–µ—Å—Ç–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏.\n–î–∏–≤—ñ—Ç—å—Å—è –ª–æ–≥–∏ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π."));
                 ui->statusBar->showMessage(tr("–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –ë–î —Ç–µ—Å—Ç–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏!"), 0);
             } else {
                 ui->statusBar->showMessage(tr("–¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω—ñ."), 5000);
                 // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                 // m_dbManager->printAllData();
             }
        }
        // --- –ö–û–ù–ï–¶ –í–†–ï–ú–ï–ù–ù–û–ì–û –ë–õ–û–ö–ê ---

    } else {
        ui->statusBar->showMessage(tr("–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö!"), 0); // –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        QMessageBox::critical(this, tr("–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è"),
                              tr("–ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.\n–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ –ª–æ–≥–∏.\n–î–æ–¥–∞—Ç–æ–∫ –º–æ–∂–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ."));
        qCritical() << "Database connection failed:" << m_dbManager->lastError().text();
    }

}

MainWindow::~MainWindow()
{
    // DatabaseManager –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±–ª–∞–≥–æ–¥–∞—Ä—è —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Ä–æ–¥–∏—Ç–µ–ª—è (this)
    // –ù–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ª—É—á—à–µ –∑–∞–∫—Ä—ã—Ç—å —è–≤–Ω–æ, –µ—Å–ª–∏ –æ–Ω–æ –µ—â–µ –æ—Ç–∫—Ä—ã—Ç–æ
    if (m_dbManager) {
        m_dbManager->closeConnection();
        // delete m_dbManager; // –ù–µ –Ω—É–∂–Ω–æ, –µ—Å–ª–∏ 'this' –±—ã–ª —Ä–æ–¥–∏—Ç–µ–ª–µ–º
    }
    delete ui;
}


// –ú–µ—Ç–æ–¥ –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è Layout
void MainWindow::clearLayout(QLayout* layout) {
    if (!layout) return;
    QLayoutItem* item;
    while ((item = layout->takeAt(0)) != nullptr) {
        if (item->widget()) {
            delete item->widget(); // –í–∏–¥–∞–ª—è—î–º–æ –≤—ñ–¥–∂–µ—Ç
        }
        delete item; // –í–∏–¥–∞–ª—è—î–º–æ –µ–ª–µ–º–µ–Ω—Ç layout
    }
}

// –ú–µ—Ç–æ–¥ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–∂–µ—Ç—É –∫–∞—Ä—Ç–∫–∏ –∫–Ω–∏–≥–∏
QWidget* MainWindow::createBookCardWidget(const BookDisplayInfo &bookInfo)
{
    // –û—Å–Ω–æ–≤–Ω–∏–π –≤—ñ–¥–∂–µ—Ç –∫–∞—Ä—Ç–∫–∏ (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ QFrame –¥–ª—è —Ä–∞–º–∫–∏)
    QFrame *cardFrame = new QFrame();
    cardFrame->setFrameShape(QFrame::StyledPanel); // –î–æ–¥–∞—î —Ä–∞–º–∫—É
    cardFrame->setFrameShadow(QFrame::Raised);     // –î–æ–¥–∞—î —Ç—ñ–Ω—å
    cardFrame->setLineWidth(1);
    cardFrame->setMinimumSize(200, 300); // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä –∫–∞—Ä—Ç–∫–∏
    cardFrame->setMaximumSize(250, 350); // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä –∫–∞—Ä—Ç–∫–∏
    cardFrame->setSizePolicy(QSizePolicy::Preferred, QSizePolicy::Fixed); // –í–∏—Å–æ—Ç–∞ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–∞
    cardFrame->setStyleSheet("QFrame { background-color: white; border-radius: 8px; }"); // –°—Ç–∏–ª—å –∫–∞—Ä—Ç–∫–∏

    // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∏–π layout –¥–ª—è –≤–º—ñ—Å—Ç—É –∫–∞—Ä—Ç–∫–∏
    QVBoxLayout *cardLayout = new QVBoxLayout(cardFrame);
    cardLayout->setSpacing(8);
    cardLayout->setContentsMargins(10, 10, 10, 10);

    // 1. –û–±–∫–ª–∞–¥–∏–Ω–∫–∞ –∫–Ω–∏–≥–∏ (QLabel)
    QLabel *coverLabel = new QLabel();
    coverLabel->setAlignment(Qt::AlignCenter);
    coverLabel->setMinimumHeight(150); // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –≤–∏—Å–æ—Ç–∞ –¥–ª—è –æ–±–∫–ª–∞–¥–∏–Ω–∫–∏
    coverLabel->setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Expanding); // –†–æ–∑—Ç—è–≥—É–≤–∞—Ç–∏
    QPixmap coverPixmap(bookInfo.coverImagePath);
    if (coverPixmap.isNull()) {
        // –Ø–∫—â–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–æ—Å—å, –ø–æ–∫–∞–∑—É—î–º–æ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
        coverLabel->setText(tr("–ù–µ–º–∞—î\n–æ–±–∫–ª–∞–¥–∏–Ω–∫–∏"));
        coverLabel->setStyleSheet("QLabel { background-color: #e0e0e0; color: #555; border-radius: 4px; }");
    } else {
        // –ú–∞—Å—à—Ç–∞–±—É—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, –∑–±–µ—Ä—ñ–≥–∞—é—á–∏ –ø—Ä–æ–ø–æ—Ä—Ü—ñ—ó
        coverLabel->setPixmap(coverPixmap.scaled(180, 240, Qt::KeepAspectRatio, Qt::SmoothTransformation));
    }
    cardLayout->addWidget(coverLabel);

    // 2. –ù–∞–∑–≤–∞ –∫–Ω–∏–≥–∏ (QLabel)
    QLabel *titleLabel = new QLabel(bookInfo.title);
    titleLabel->setWordWrap(true); // –ü–µ—Ä–µ–Ω–æ—Å–∏—Ç–∏ —Ç–µ–∫—Å—Ç
    titleLabel->setAlignment(Qt::AlignCenter);
    titleLabel->setStyleSheet("QLabel { font-weight: bold; font-size: 11pt; }");
    cardLayout->addWidget(titleLabel);

    // 3. –ê–≤—Ç–æ—Ä(–∏) (QLabel)
    QLabel *authorLabel = new QLabel(bookInfo.authors);
    authorLabel->setWordWrap(true);
    authorLabel->setAlignment(Qt::AlignCenter);
    authorLabel->setStyleSheet("QLabel { color: #555; font-size: 9pt; }");
    cardLayout->addWidget(authorLabel);

    // 4. –¶—ñ–Ω–∞ (QLabel)
    QLabel *priceLabel = new QLabel(QString::number(bookInfo.price, 'f', 2) + tr(" –≥—Ä–Ω"));
    priceLabel->setAlignment(Qt::AlignCenter);
    priceLabel->setStyleSheet("QLabel { font-weight: bold; color: #007bff; font-size: 10pt; margin-top: 5px; }");
    cardLayout->addWidget(priceLabel);

    // –î–æ–¥–∞—î–º–æ —Ä–æ–∑—Ç—è–≥—É–≤–∞—á, —â–æ–± –ø—Ä–∏—Ç–∏—Å–Ω—É—Ç–∏ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑ (—è–∫—â–æ –≤–æ–Ω–∞ —î)
    cardLayout->addStretch(1);

    // 5. –ö–Ω–æ–ø–∫–∞ "–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫" (QPushButton - –ø—Ä–∏–∫–ª–∞–¥)
    QPushButton *addToCartButton = new QPushButton(tr("üõí –î–æ–¥–∞—Ç–∏"));
    addToCartButton->setStyleSheet("QPushButton { background-color: #28a745; color: white; border: none; border-radius: 4px; padding: 8px; font-size: 9pt; } QPushButton:hover { background-color: #218838; }");
    addToCartButton->setToolTip(tr("–î–æ–¥–∞—Ç–∏ '%1' –¥–æ –∫–æ—à–∏–∫–∞").arg(bookInfo.title));
    // –¢—É—Ç –º–æ–∂–Ω–∞ –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏ —Å–∏–≥–Ω–∞–ª –∫–Ω–æ–ø–∫–∏ –¥–æ —Å–ª–æ—Ç–∞
    // connect(addToCartButton, &QPushButton::clicked, this, [this, bookInfo](){ /* –ª–æ–≥—ñ–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤ –∫–æ—à–∏–∫ */ });
    cardLayout->addWidget(addToCartButton);


    cardFrame->setLayout(cardLayout); // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ layout –¥–ª—è —Ñ—Ä–µ–π–º—É
    return cardFrame;
}


// –°–ª–æ—Ç –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–Ω–∏–≥ —É —Å—ñ—Ç—Ü—ñ
void MainWindow::displayBooks(const QList<BookDisplayInfo> &books)
{
    // –û—á–∏—â–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –≤—ñ–¥–∂–µ—Ç–∏ –∑ booksContainerLayout
    clearLayout(ui->booksContainerLayout);

    if (!ui->booksContainerLayout) {
        qWarning() << "booksContainerLayout is null!";
        return;
    }

    int row = 0;
    int col = 0;
    const int maxColumns = 4; // –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–ª–æ–Ω–æ–∫ —É —Å—ñ—Ç—Ü—ñ

    for (const BookDisplayInfo &bookInfo : books) {
        QWidget *bookCard = createBookCardWidget(bookInfo);
        if (bookCard) {
            ui->booksContainerLayout->addWidget(bookCard, row, col);
            col++;
            if (col >= maxColumns) {
                col = 0;
                row++;
            }
        }
    }

    // –î–æ–¥–∞—î–º–æ —Ä–æ–∑—Ç—è–≥—É–≤–∞—á –≤ –∫—ñ–Ω—Ü—ñ, —â–æ–± –∫–∞—Ä—Ç–∫–∏ –Ω–µ —Ä–æ–∑—Ç—è–≥—É–≤–∞–ª–∏—Å—è –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ
    // –°–ø–æ—á–∞—Ç–∫—É –≤–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä–∏–π —Ä–æ–∑—Ç—è–≥—É–≤–∞—á, —è–∫—â–æ –≤—ñ–Ω —î
    QLayoutItem* item;
    while ((item = ui->booksContainerLayout->takeAt(ui->booksContainerLayout->count() -1)) != nullptr && item->spacerItem()) {
        delete item;
    }
    // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∏–π —Ä–æ–∑—Ç—è–≥—É–≤–∞—á –≤ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Ä—è–¥–æ–∫
    ui->booksContainerLayout->addItem(new QSpacerItem(20, 40, QSizePolicy::Minimum, QSizePolicy::Expanding), row + 1, 0, 1, maxColumns);
    // –î–æ–¥–∞—î–º–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∏–π —Ä–æ–∑—Ç—è–≥—É–≤–∞—á –≤ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Å—Ç–æ–≤–ø–µ—Ü—å
    ui->booksContainerLayout->addItem(new QSpacerItem(40, 20, QSizePolicy::Expanding, QSizePolicy::Minimum), 0, maxColumns);


    // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ–Ω–æ–≤–∏–≤—Å—è
    ui->booksContainerWidget->updateGeometry();
    ui->booksScrollArea->updateGeometry();
}
